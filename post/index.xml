<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Who wonders ponders</title>
    <link>/./post/</link>
    <description>Recent content in Posts on Who wonders ponders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Oct 2017 21:07:14 -0500</lastBuildDate>
    
	<atom:link href="/./post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing</title>
      <link>/./2017/10/testing/</link>
      <pubDate>Wed, 04 Oct 2017 21:07:14 -0500</pubDate>
      
      <guid>/./2017/10/testing/</guid>
      <description>gganimate: Create easy animations with ggplot2 gganimate wraps the animation package to create animated ggplot2 plots. It can be installed using devtools:
devtools::install_github(&amp;quot;dgrtwo/gganimate&amp;quot;) The core of the approach is to treat “frame” (as in, the time point within an animation) as another aesthetic, just like x, y, size, color, or so on. Thus, a variable in your data can be mapped to frame just as others are mapped to x or y.</description>
    </item>
    
    <item>
      <title>Final consumption expenditure of households</title>
      <link>/./2017/10/final-consumption-expenditure-of-households/</link>
      <pubDate>Tue, 03 Oct 2017 21:07:14 -0500</pubDate>
      
      <guid>/./2017/10/final-consumption-expenditure-of-households/</guid>
      <description>The Economist and The Economist stackoverflow
At first we will download two Eurostat data sets:
 nama_co3_c - Final consumption expenditure of households by consumption purpose - COICOP 3 digit - aggregates at current prices, ESA 1995. nama_10_co3_p3 - Final consumption expenditure of households by consumption purpose (COICOP 3 digit) ESA 2010.  library(eurostat) library(data.table) library(tidyr) library(magrittr) library(ggplot2) library(cowplot) library(plyr) library(dplyr) library(gganimate) Download data:
data &amp;lt;- lapply(c(&amp;quot;nama_co3_c&amp;quot;, &amp;quot;nama_10_co3_p3&amp;quot;), get_eurostat) The new European System of National and Regional Accounts (ESA10) was introduced in 2014.</description>
    </item>
    
    <item>
      <title>Timeline of Schools in Lithuania</title>
      <link>/./2017/09/leaflet/</link>
      <pubDate>Fri, 01 Sep 2017 21:07:14 -0500</pubDate>
      
      <guid>/./2017/09/leaflet/</guid>
      <description>Happy school year! With a lot of of help from RSelenium I did some Wikipedia scrapping and gathered a data set on schools in Lithuania. According to the ministry of education where were 1151 schools in 2016-2017. Data set covers about 80\(\%\) of the total population. In this post only information that can be found in the Wikipedia and schools websites which are listed in it is presented. One can see three major peak periods: education reform (1777-1781), first independence (1918-1919), second independence(1991-1993).</description>
    </item>
    
    <item>
      <title>Symbolic Computation, R &#43; Maxima</title>
      <link>/./2017/08/symbolic-computation-r---maxima/</link>
      <pubDate>Wed, 23 Aug 2017 21:13:14 -0500</pubDate>
      
      <guid>/./2017/08/symbolic-computation-r---maxima/</guid>
      <description>Package rSymPy offers a nice possibility to do symbolic computation in R. In this post I want to suggest an alternative to it, which helped me out to derive some complex expressions of conditional moments for multivariate normal distribution. rSymPy was simply too slow for my tasks, so I remembered computer algebra system - Maxima. What is also nice, that this option also produces Tex output. In this post I will provide some instructions for Windows users.</description>
    </item>
    
  </channel>
</rss>