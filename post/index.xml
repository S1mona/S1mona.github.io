<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Who wonders ponders</title>
    <link>/./post/</link>
    <description>Recent content in Posts on Who wonders ponders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Aug 2019 21:07:14 -0500</lastBuildDate>
    
	<atom:link href="/./post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Elections in Austria</title>
      <link>/./2019/08/elections-in-austria/</link>
      <pubDate>Wed, 28 Aug 2019 21:07:14 -0500</pubDate>
      
      <guid>/./2019/08/elections-in-austria/</guid>
      <description>Amazed by the election advertisements in Austria, I have decided to get my hands dirty and do some analyses about the forthcoming election. derStandard decided to have discussions why Austrians are electing FPÖ, Neos, and ÖVP.Strangely enough I did not find a discussion on SPÖ.
To get the postings I used wonderful RSelenium, for data cleaning tm, and for visualization wordcloud.
FPÖ - 1963 posts
Neos - 875 postings</description>
    </item>
    
    <item>
      <title>Hourly wage rate for domestic help in Austria</title>
      <link>/./2018/09/hourly-wage-rate-for-domestic-help-in-austria/</link>
      <pubDate>Mon, 03 Sep 2018 00:07:14 -0500</pubDate>
      
      <guid>/./2018/09/hourly-wage-rate-for-domestic-help-in-austria/</guid>
      <description>So today I have submitted my first article for review. We have calculated some interesting time indicators for Austria, such as value of leisure (VoL). Although, this work is partially done, it left me with a lot of questions. The used theoretical model takes into account only the official/paid work, but the domestic/unpaid work is not considered as a “real” work, as it does not generate any money.In our sample women work 8 hours less than men, but they are involved in 9 hours more of domestic work.</description>
    </item>
    
    <item>
      <title>Asylum seekers</title>
      <link>/./2018/08/asylum-seekers/</link>
      <pubDate>Tue, 07 Aug 2018 00:07:14 -0500</pubDate>
      
      <guid>/./2018/08/asylum-seekers/</guid>
      <description>Goal: visualize first instance decisions on applications by citizenship, age and sex annual aggregated data from Eurostat.
Load libraries:library(eurostat)library(data.table)library(tidyr)library(magrittr)library(plyr)library(dplyr)library(rjson)library(viridisLite)library(highcharter)Download the data:if(!file.exists(&amp;quot;data_asylum.Rdata&amp;quot;)){data &amp;lt;- &amp;quot;migr_asydcfsta&amp;quot; %&amp;gt;% get_eurostat %&amp;gt;% data.tablesave(data, file=&amp;quot;data_asylum.Rdata&amp;quot;)}load(&amp;quot;data_asylum.Rdata&amp;quot;)dic &amp;lt;- lapply(names(data), get_eurostat_dic)eumap &amp;lt;- rjson::fromJSON(file = &amp;quot;http://code.highcharts.com/mapdata/custom/europe.geo.json&amp;quot;, method = &amp;#39;C&amp;#39;)for (i in 1:length(eumap$features)){names(eumap$features[[i]][[3]])[names(eumap$features[[i]][[3]]) %in% &amp;quot;iso-a2&amp;quot;] &amp;lt;- &amp;quot;code&amp;quot;}data[, period := year(time)]data[, time := NULL]data &amp;lt;- data[age %in% &amp;quot;TOTAL&amp;quot; &amp;amp; decision %in% c(&amp;quot;TOTAL&amp;quot;, &amp;quot;REJECTED&amp;quot;) &amp;amp; citizen %in% &amp;quot;TOTAL&amp;quot; &amp;amp; sex %in% &amp;quot;T&amp;quot;, ]data[, geo1 := as.</description>
    </item>
    
    <item>
      <title>Final consumption expenditure of households</title>
      <link>/./2017/10/final-consumption-expenditure-of-households/</link>
      <pubDate>Tue, 03 Oct 2017 21:07:14 -0500</pubDate>
      
      <guid>/./2017/10/final-consumption-expenditure-of-households/</guid>
      <description>In 2015 I was working on my master thesis “The integration of (QU)AIDS and input-output analysis in a panel data setting” and had to analyse the structure of household expenditure. I stumbled open several visualizations in The Economist (World and EU) while searching for information on this topic. Thinking that they looked great I wanted to replicate these with R. The way I chose to do it is based on the question in stackoverflow.</description>
    </item>
    
    <item>
      <title>Timeline of Schools in Lithuania</title>
      <link>/./2017/09/leaflet/</link>
      <pubDate>Fri, 01 Sep 2017 21:07:14 -0500</pubDate>
      
      <guid>/./2017/09/leaflet/</guid>
      <description>Happy school year! With a lot of of help from RSelenium I did some Wikipedia scrapping and gathered a data set on schools in Lithuania. According to the ministry of education where were 1151 schools in 2016-2017. Data set covers about 80\(\%\) of the total population. In this post only information that can be found in the Wikipedia and schools websites which are listed in it is presented.One can see three major peak periods: education reform (1777-1781), first independence (1918-1919), second independence(1991-1993).</description>
    </item>
    
    <item>
      <title>Symbolic Computation, R &#43; Maxima</title>
      <link>/./2017/08/symbolic-computation-r-maxima/</link>
      <pubDate>Wed, 23 Aug 2017 21:13:14 -0500</pubDate>
      
      <guid>/./2017/08/symbolic-computation-r-maxima/</guid>
      <description>Package rSymPy offers a nice possibility to do symbolic computation in R. In this post I want to suggest an alternative to it, which helped me out to derive some complex expressions of conditional moments for multivariate normal distribution.rSymPy was simply too slow for my tasks, so I remembered computer algebra system - Maxima.What is also nice, that this option also produces Tex output.In this post I will provide some instructions for Windows users.</description>
    </item>
    
    <item>
      <title></title>
      <link>/./1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/./1/01/</guid>
      <description>highchart(function() {// If window.HTMLWidgets is already defined, then use it; otherwise create a// new object. This allows preceding code to set options that affect the// initialization process (though none currently exist).window.HTMLWidgets = window.HTMLWidgets || {};// See if we&#39;re running in a viewer pane. If not, we&#39;re in a web browser.var viewerMode = window.HTMLWidgets.viewerMode =/\bviewer_pane=1\b/.test(window.location);// See if we&#39;re running in Shiny mode.</description>
    </item>
    
    <item>
      <title></title>
      <link>/./1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/./1/01/</guid>
      <description>highchart(function() {// If window.HTMLWidgets is already defined, then use it; otherwise create a// new object. This allows preceding code to set options that affect the// initialization process (though none currently exist).window.HTMLWidgets = window.HTMLWidgets || {};// See if we&#39;re running in a viewer pane. If not, we&#39;re in a web browser.var viewerMode = window.HTMLWidgets.viewerMode =/\bviewer_pane=1\b/.test(window.location);// See if we&#39;re running in Shiny mode.</description>
    </item>
    
  </channel>
</rss>